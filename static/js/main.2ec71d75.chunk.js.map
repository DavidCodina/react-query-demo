{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","className","style","minWidth","onClick","Planet","planet","backgroundColor","borderColor","name","color","population","terrain","getPlanets","a","queryKey","page","fetch","res","json","Planets","useState","useQuery","data","status","Fragment","previous","previousPageNumber","split","parseInt","fontFamily","fontSize","next","nextPageNumber","maxWidth","results","map","Person","person","gender","birth_year","getPeople","People","queryClient","QueryClient","App","QueryClientProvider","client","initialIsOpen","position","ReactDOM","render","document","getElementById"],"mappings":"oMAsBeA,EAnBA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,sBAAKC,UAAU,mBAAf,UACE,wBACEA,UAAU,6BACVC,MAAO,CAACC,SAAU,KAClBC,QAAS,kBAAMJ,EAAQ,YAHzB,qBAMA,wBACEC,UAAU,wBACVC,MAAO,CAACC,SAAU,KAClBC,QAAS,kBAAMJ,EAAQ,WAHzB,wB,iCCGSK,EAbA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,qBACAL,UAAU,yCACVC,MAAO,CAACK,gBAAiB,cAAeC,YAAa,WAFrD,UAIE,+BAAMF,EAAOG,KAAb,OACA,oBAAGP,MAAO,CAACQ,MAAO,QAAlB,0BAA0CJ,EAAOK,cACjD,oBAAGT,MAAO,CAACQ,MAAO,QAAlB,uBAAuCJ,EAAOM,eCL9CC,EAAU,uCAAG,mCAAAC,EAAA,6DAASC,EAAT,EAASA,SAAT,cACGA,EADH,QACLC,EADK,cAESC,MAAM,uCAAD,OAAwCD,IAFtD,cAEXE,EAFW,yBAGVA,EAAIC,QAHM,2CAAH,sDAsEDC,EA/DC,WACd,MAA0BC,mBAAS,GAAnC,mBAAQL,EAAR,KAAchB,EAAd,KACA,EAA0BsB,YAAS,CAAC,UAAWN,GAAOH,GAA9CU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAmBd,OACE,eAAC,IAAMC,SAAP,WACE,oBAAIxB,UAAU,mBAAd,qBAGA,sBAAKA,UAAU,kEAAf,UACE,wBACEA,UAAU,6BACVC,MAAO,CAACC,SAAU,KAClBC,QAzBgB,WACtB,GAAImB,GAAQA,EAAKG,SAAS,CACxB,IAAMC,EAAqBJ,EAAKG,SAASE,MAAM,KAAK,GACpD5B,EAAQ6B,SAASF,MAmBf,sBAOA,qBAAK1B,UAAU,sBAAsBC,MAAO,CAAC4B,WAAY,aAAcC,SAAU,IAAjF,SAAuFf,IAEvF,wBACEf,UAAU,wBACVC,MAAO,CAACC,SAAU,KAClBC,QA1BY,WAClB,GAAImB,GAAQA,EAAKS,KAAK,CACpB,IAAMC,EAAiBV,EAAKS,KAAKJ,MAAM,KAAK,GAC5C5B,EAAQ6B,SAASI,MAoBf,qBAQW,YAAXT,GAAwB,oBAAIvB,UAAU,cAAd,wBAEb,UAAXuB,GAAsB,oBAAIvB,UAAU,0BAAd,wCAGX,YAAXuB,GACA,oBACEvB,UAAU,+BACVC,MAAO,CAACgC,SAAU,IAAK3B,gBAAiB,eAF1C,SAIIgB,EAAKY,QAAQC,KAAI,SAAA9B,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOG,eCjD5C4B,EAdA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,qBACArC,UAAU,yCACVC,MAAO,CAACK,gBAAiB,cAAeC,YAAa,WAFrD,UAIE,+BAAM8B,EAAO7B,KAAb,OACA,oBAAGP,MAAO,CAACQ,MAAO,QAAlB,sBAAsC4B,EAAOC,UAC7C,oBAAGrC,MAAO,CAACQ,MAAO,QAAlB,0BAA0C4B,EAAOE,kBCNjDC,EAAS,uCAAG,mCAAA3B,EAAA,6DAASC,EAAT,EAASA,SAAT,cACIA,EADJ,QACJC,EADI,cAEUC,MAAM,sCAAD,OAAuCD,IAFtD,cAEVE,EAFU,yBAGTA,EAAIC,QAHK,2CAAH,sDAsEAuB,EA/DA,WACb,MAA0BrB,mBAAS,GAAnC,mBAAQL,EAAR,KAAchB,EAAd,KACA,EAAyBsB,YAAS,CAAC,SAAUN,GAAOyB,GAA5ClB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAmBd,OACE,eAAC,IAAMC,SAAP,WACE,oBAAIxB,UAAU,mBAAd,oBAGA,sBAAKA,UAAU,kEAAf,UACE,wBACEA,UAAU,6BACVC,MAAO,CAACC,SAAU,KAClBC,QAzBgB,WACtB,GAAImB,GAAQA,EAAKG,SAAS,CACxB,IAAMC,EAAqBJ,EAAKG,SAASE,MAAM,KAAK,GACpD5B,EAAQ6B,SAASF,MAmBf,sBAOA,qBAAK1B,UAAU,sBAAsBC,MAAO,CAAC4B,WAAY,aAAcC,SAAU,IAAjF,SAAuFf,IAEvF,wBACEf,UAAU,wBACVC,MAAO,CAACC,SAAU,KAClBC,QA1BY,WAClB,GAAImB,GAAQA,EAAKS,KAAK,CACpB,IAAMC,EAAiBV,EAAKS,KAAKJ,MAAM,KAAK,GAC5C5B,EAAQ6B,SAASI,MAoBf,qBAQW,YAAXT,GAAwB,oBAAIvB,UAAU,cAAd,wBAEb,UAAXuB,GAAsB,oBAAIvB,UAAU,0BAAd,wCAGX,YAAXuB,GACA,oBACEvB,UAAU,+BACVC,MAAO,CAACgC,SAAU,IAAK3B,gBAAiB,eAF1C,SAIIgB,EAAKY,QAAQC,KAAI,SAAAE,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAO7B,eC3DrDkC,EAAc,IAAIC,IAqCTC,MAlCf,WACE,MAAsBxB,mBAAS,WAA/B,mBAAKL,EAAL,KAAWhB,EAAX,KAGA,OACE,cAAC8C,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,SACA,uBAAM1C,UAAU,OAAhB,UACE,cAAC,qBAAD,CAAoB+C,eAAe,EAAOC,SAAS,cAEnD,sBAAKhD,UAAU,+BAAf,UAEE,oBAAIA,UAAU,kCAAd,4BAGA,cAAC,EAAD,CAAQD,QAASA,IAGjB,sBAAKC,UAAU,mBAAf,UACE,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAC5D,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAC5D,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,0BAInD,YAATe,EAAqB,cAAC,EAAD,IAAc,cAAC,EAAD,a,MC7B7CkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ec71d75.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Navbar = ({ setPage }) => {\n  return ( \n    <nav className=\"mb-5 text-center\">\n      <button \n        className=\"btn btn-outline-light me-3\" \n        style={{minWidth: 125}}\n        onClick={() => setPage('planets')}\n      >Planets</button>\n\n      <button \n        className=\"btn btn-outline-light\"    \n        style={{minWidth: 125}}  \n        onClick={() => setPage('people')}\n      >People</button>\n    </nav>\n  );\n};\n\n \nexport default Navbar;","import React from 'react';\n\nconst Planet = ({ planet }) => {\n  return (\n    <li \n    className=\"list-group-item text-sw-yellow bg-dark\"\n    style={{backgroundColor: 'transparent', borderColor: '#ffff57'}}\n    >\n      <h3>{ planet.name }:</h3>\n      <p style={{color: '#DDD'}}>Population - { planet.population }</p>\n      <p style={{color: '#DDD'}}>Terrain - { planet.terrain }</p>\n    </li>\n  );\n}\n \nexport default Planet;","import React, { useState } from 'react';\nimport { useQuery }        from 'react-query';\nimport Planet              from './Planet';\n\n\nconst getPlanets = async ({ queryKey }) => {\n  const [key, page] = queryKey;\n  const res         = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\n  return res.json();\n};\n\n\nconst Planets = () => {\n  const [ page, setPage ] = useState(1);\n  const { data, status }  = useQuery(['planets', page], getPlanets);\n\n\n  const getPreviousPage = () => {\n    if (data && data.previous){ // data.previous will be null if there is not a previous page.\n      const previousPageNumber = data.previous.split(\"=\")[1];\n      setPage(parseInt(previousPageNumber));\n    }\n  };\n\n\n  const getNextPage = () => {\n    if (data && data.next){ // data.next will be null if there is not a next page.\n      const nextPageNumber = data.next.split(\"=\")[1];\n      setPage(parseInt(nextPageNumber));\n    }\n  };\n\n\n  return (\n    <React.Fragment>\n      <h2 className=\"mb-3 text-center\">Planets</h2>\n\n    \n      <div className=\"d-flex flex-wrap justify-content-center align-items-center mb-3\">\n        <button \n          className=\"btn btn-outline-light me-3\" \n          style={{minWidth: 125}}\n          onClick={getPreviousPage}\n        >Previous</button>\n\n\n        <div className=\"d-inline-block me-3\" style={{fontFamily: 'Montserrat', fontSize: 32}}>{page}</div>\n\n        <button \n          className=\"btn btn-outline-light\" \n          style={{minWidth: 125}}\n          onClick={getNextPage}\n        >Next</button>\n      </div>\n      \n      \n      { status === 'loading' && <h1 className=\"text-center\">Loading...</h1> }\n\n      { status === 'error' && <h1 className=\"text-center text-danger\">Error: Could not get data!</h1> }\n\n      {\n        status === 'success' && (\n        <ul \n          className=\"w-90 mx-auto mb-5 list-group\" \n          style={{maxWidth: 800, backgroundColor: 'transparent'}}\n        >\n          { data.results.map(planet => <Planet key={planet.name} planet={planet} /> ) }\n        </ul>\n        )\n      } \n    </React.Fragment>\n  );\n};\n\n \nexport default Planets;\n \n","import React from 'react';\n\n\nconst Person = ({ person }) => {\n  return (\n    <li \n    className=\"list-group-item text-sw-yellow bg-dark\"\n    style={{backgroundColor: 'transparent', borderColor: '#ffff57'}}\n    >\n      <h3>{ person.name}:</h3>\n      <p style={{color: '#DDD'}}>Gender - { person.gender }</p>\n      <p style={{color: '#DDD'}}>Birth year - { person.birth_year }</p>\n    </li>\n  );\n}\n\n \nexport default Person;","import React, { useState } from 'react';\nimport { useQuery }        from 'react-query';\nimport Person              from './Person';\n\n\nconst getPeople = async ({ queryKey }) => {\n  const [key, page] = queryKey;\n  const res         = await fetch(`https://swapi.dev/api/people/?page=${page}`);\n  return res.json();\n};\n\n\nconst People = () => {\n  const [ page, setPage ] = useState(1);\n  const { data, status } = useQuery(['people', page], getPeople);\n\n\n  const getPreviousPage = () => {\n    if (data && data.previous){ // data.previous will be null if there is not a previous page.\n      const previousPageNumber = data.previous.split(\"=\")[1];\n      setPage(parseInt(previousPageNumber));\n    }\n  };\n\n\n  const getNextPage = () => {\n    if (data && data.next){ // data.next will be null if there is not a next page.\n      const nextPageNumber = data.next.split(\"=\")[1];\n      setPage(parseInt(nextPageNumber));\n    }\n  };\n\n\n  return (\n    <React.Fragment>\n      <h2 className=\"mb-3 text-center\">People</h2>\n\n\n      <div className=\"d-flex flex-wrap justify-content-center align-items-center mb-3\">\n        <button \n          className=\"btn btn-outline-light me-3\" \n          style={{minWidth: 125}}\n          onClick={getPreviousPage}\n        >Previous</button>\n\n\n        <div className=\"d-inline-block me-3\" style={{fontFamily: 'Montserrat', fontSize: 32}}>{page}</div>\n\n        <button \n          className=\"btn btn-outline-light\" \n          style={{minWidth: 125}}\n          onClick={getNextPage}\n        >Next</button>\n      </div>\n      \n\n      { status === 'loading' && <h1 className=\"text-center\">Loading...</h1> }\n\n      { status === 'error' && <h1 className=\"text-center text-danger\">Error: Could not get data!</h1> }\n\n      {\n        status === 'success' && (\n        <ul \n          className=\"w-90 mx-auto mb-5 list-group\" \n          style={{maxWidth: 800, backgroundColor: 'transparent'}}\n        >\n          { data.results.map(person => <Person key={person.name} person={person} /> ) }\n        </ul>\n        )\n      } \n    </React.Fragment>\n  );\n};\n \n \nexport default People;","import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport Navbar  from './components/Navbar';\nimport Planets from './components/Planets';\nimport People  from './components/People';\n\nconst queryClient = new QueryClient();\n\n\nfunction App(){\n  let [page, setPage] = useState('planets');\n\n\n  return (\n    <QueryClientProvider client={queryClient}>\n    <main className=\"py-4\">\n      <ReactQueryDevtools initialIsOpen={false} position=\"top-right\" />\n\n      <div className=\"container-fluid pt-3 px-md-5\">\n      \n        <h1 className=\"mb-3 text-center text-sw-yellow\">Star Wars Info</h1>\n\n        {/* This is for a very basic router. */}\n        <Navbar setPage={setPage} />\n\n\n        <div className=\"horizontal-ruler\">\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        </div>\n\n\n        { page === 'planets' ? <Planets /> : <People /> }\n      </div> \n    </main>\n\n      \n    </QueryClientProvider>\n  );\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App      from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}